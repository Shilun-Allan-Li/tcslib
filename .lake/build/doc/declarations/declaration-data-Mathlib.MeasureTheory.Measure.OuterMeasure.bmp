{"name":"Mathlib.MeasureTheory.Measure.OuterMeasure","instances":[{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instCoeFun","className":"CoeFun"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instZero","className":"Zero"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instInhabited","className":"Inhabited"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instAdd","className":"Add"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instSMul","className":"SMul"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instSMulCommClass","className":"SMulCommClass"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instIsScalarTower","className":"IsScalarTower"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instIsCentralScalar","className":"IsCentralScalar"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instMulAction","className":"MulAction"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.addCommMonoid","className":"AddCommMonoid"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instDistribMulAction","className":"DistribMulAction"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instModule","className":"Module"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instBot","className":"Bot"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instPartialOrder","className":"PartialOrder"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.OuterMeasure.orderBot","className":"OrderBot"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instSupSet","className":"SupSet"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instCompleteLattice","className":"CompleteLattice"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instFunctor","className":"Functor"},{"typeNames":["MeasureTheory.OuterMeasure"],"name":"MeasureTheory.OuterMeasure.instLawfulFunctor","className":"LawfulFunctor"}],"imports":["Init","Mathlib.Analysis.SpecificLimits.Basic","Mathlib.MeasureTheory.PiSystem","Mathlib.Data.Countable.Basic","Mathlib.Data.Fin.VecNotation"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1773-L1784","name":"MeasureTheory.OuterMeasure.restrict_trim","line":1773,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_trim","doc":"The trimmed property of a measure μ states that `μ.toOuterMeasure.trim = μ.toOuterMeasure`.\nThis theorem shows that a restricted trimmed outer measure is a trimmed outer measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_trim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_trim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">μ</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">μ</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1759-L1768","name":"MeasureTheory.OuterMeasure.trim_iSup","line":1759,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_iSup","doc":"`trim` sends the supremum of a countable family of outer measures to the supremum\nof the trimmed measures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_iSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1753-L1754","name":"MeasureTheory.OuterMeasure.trim_sup","line":1753,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_sup","doc":"`trim` sends the supremum of two outer measures to the supremum of the trimmed measures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_sup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Mathlib/Order/Basic.html#Sup.sup\">⊔</a> <span class=\"fn\">m₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span> <a href=\"./Mathlib/Order/Basic.html#Sup.sup\">⊔</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1747-L1749","name":"MeasureTheory.OuterMeasure.trim_smul","line":1747,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_smul","doc":"`trim` respects scalar multiplication. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_smul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1742-L1743","name":"MeasureTheory.OuterMeasure.trim_add","line":1742,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_add","doc":"`trim` is additive. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_add\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1736-L1738","name":"MeasureTheory.OuterMeasure.trim_op","line":1736,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_op","doc":"If `m₁ s = op (m₂ s)` for all `s`, then the same is true for `m₁.trim` and `m₂.trim`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_op\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_op</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{op : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">op</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">op</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1728-L1732","name":"MeasureTheory.OuterMeasure.trim_binop","line":1728,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_binop","doc":"If `m₁ s = op (m₂ s) (m₃ s)` for all `s`, then the same is true for `m₁.trim`, `m₂.trim`,\nand `m₃ s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_binop\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_binop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₃ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{op : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">op</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">m₃</span> <span class=\"fn\">s</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">op</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span>)</span> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₃</span></span>)</span> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1717-L1723","name":"MeasureTheory.OuterMeasure.exists_measurable_superset_forall_eq_trim","line":1717,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_measurable_superset_forall_eq_trim","doc":"If `μ i` is a countable family of outer measures, then for every set `s` there exists\na measurable set `t ⊇ s` such that `μ i t = (μ i).trim s` for all `i`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_measurable_superset_forall_eq_trim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">exists_measurable_superset_forall_eq_trim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(μ : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">i</span></span>)</span></span>)</span> <span class=\"fn\">s</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1709-L1712","name":"MeasureTheory.OuterMeasure.exists_measurable_superset_of_trim_eq_zero","line":1709,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_measurable_superset_of_trim_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_measurable_superset_of_trim_eq_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">exists_measurable_superset_of_trim_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1681-L1706","name":"MeasureTheory.OuterMeasure.exists_measurable_superset_eq_trim","line":1681,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_measurable_superset_eq_trim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_measurable_superset_eq_trim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">exists_measurable_superset_eq_trim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1674-L1678","name":"MeasureTheory.OuterMeasure.trim_sum_ge","line":1674,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_sum_ge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_sum_ge\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_sum_ge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum\">MeasureTheory.OuterMeasure.sum</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum\">MeasureTheory.OuterMeasure.sum</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1667-L1671","name":"MeasureTheory.OuterMeasure.trim_zero","line":1667,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1662-L1663","name":"MeasureTheory.OuterMeasure.trim_top","line":1662,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1657-L1658","name":"MeasureTheory.OuterMeasure.trim_trim","line":1657,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_trim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_trim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_trim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1653-L1654","name":"MeasureTheory.OuterMeasure.trim_eq_iInf'","line":1653,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq_iInf'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq_iInf'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_eq_iInf'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\">{ <span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span></span> }</span>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">↑<span class=\"fn\">t</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1646-L1650","name":"MeasureTheory.OuterMeasure.trim_eq_iInf","line":1646,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq_iInf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_eq_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">t</span></span>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1641-L1643","name":"MeasureTheory.OuterMeasure.trim_eq_trim_iff","line":1641,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq_trim_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq_trim_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_eq_trim_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1636-L1638","name":"MeasureTheory.OuterMeasure.trim_le_trim_iff","line":1636,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_le_trim_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_le_trim_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_le_trim_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1624-L1633","name":"MeasureTheory.OuterMeasure.le_trim_iff","line":1624,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_trim_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_trim_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_trim_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1620-L1621","name":"MeasureTheory.OuterMeasure.trim_mono","line":1620,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">MeasureTheory.OuterMeasure.trim</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1611-L1616","name":"MeasureTheory.OuterMeasure.trim_congr","line":1611,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ {<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1606-L1608","name":"MeasureTheory.OuterMeasure.trim_eq","line":1606,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1597-L1602","name":"MeasureTheory.OuterMeasure.le_trim","line":1597,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_trim","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_trim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_trim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\">MeasureTheory.OuterMeasure.trim</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1593-L1594","name":"MeasureTheory.OuterMeasure.trim","line":1593,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim","doc":"Given an outer measure `m` we can forget its value on non-measurable sets, and then consider\n`m.trim`, the unique maximal outer measure less than that function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.trim\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">trim</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1580-L1582","name":"MeasureTheory.inducedOuterMeasure_eq","line":1580,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\">⋃ (b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1575-L1577","name":"MeasureTheory.inducedOuterMeasure_eq_extend","line":1575,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq_extend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq_extend\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_eq_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\">⋃ (b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1565-L1572","name":"MeasureTheory.extend_iUnion_le_tsum_nat","line":1565,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion_le_tsum_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion_le_tsum_nat\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_iUnion_le_tsum_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\">⋃ (b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1554-L1562","name":"MeasureTheory.extend_mono","line":1554,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span> →\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\">⋃ (b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">b</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1511-L1532","name":"MeasureTheory.inducedOuterMeasure_caratheodory","line":1511,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_caratheodory","doc":"To test whether `s` is Carathéodory-measurable we only need to check the sets `t` for which\n`P t` holds. See `ofFunction_caratheodory` for another way to show the Carathéodory-measurability\nof `s`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>),\n    <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">t</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>         <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">t</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1493-L1504","name":"MeasureTheory.inducedOuterMeasure_exists_set","line":1493,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_exists_set","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_exists_set\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_exists_set</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ε : <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hε : <span class=\"fn\"><span class=\"fn\">ε</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">t</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">ε</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1483-L1490","name":"MeasureTheory.inducedOuterMeasure_preimage","line":1483,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_preimage","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_preimage\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_preimage</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Pm : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mm : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">f</span></span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">A</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">A</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1466-L1480","name":"MeasureTheory.inducedOuterMeasure_eq_iInf","line":1466,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq_iInf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_eq_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\">⨅ (ht : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">t</span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">t</span> <span class=\"fn\">ht</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1462-L1463","name":"MeasureTheory.inducedOuterMeasure_eq'","line":1462,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_eq'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1457-L1459","name":"MeasureTheory.inducedOuterMeasure_eq_extend'","line":1457,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq_extend'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_eq_extend'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_eq_extend'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1450-L1454","name":"MeasureTheory.inducedOuterMeasure_union_of_false_of_nonempty_inter","line":1450,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_union_of_false_of_nonempty_inter","doc":"If `P u` is `False` for any set `u` that has nonempty intersection both with `s` and `t`, then\n`μ (s ∪ t) = μ s + μ t`, where `μ = inducedOuterMeasure m P0 m0`.\n\nE.g., if `α` is an (e)metric space and `P u = diam u < r`, then this lemma implies that\n`μ (s ∪ t) = μ s + μ t` on any two sets such that `r ≤ edist x y` for all `x ∈ s` and `y ∈ t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure_union_of_false_of_nonempty_inter\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure_union_of_false_of_nonempty_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">u</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">u</span></span>)</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">u</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span>)</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1440-L1442","name":"MeasureTheory.le_inducedOuterMeasure","line":1440,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.le_inducedOuterMeasure","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.le_inducedOuterMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">le_inducedOuterMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\">MeasureTheory.inducedOuterMeasure</a> <span class=\"fn\">m</span> <span class=\"fn\">P0</span> <span class=\"fn\">m0</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">hs</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">hs</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1434-L1435","name":"MeasureTheory.inducedOuterMeasure","line":1434,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure","doc":"Given an arbitrary function on a subset of sets, we can define the outer measure corresponding\nto it (this is the unique maximal outer measure that is at most `m` on the domain of `m`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.inducedOuterMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">inducedOuterMeasure</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1420-L1425","name":"MeasureTheory.extend_union","line":1420,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">s₁</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">s₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1410-L1417","name":"MeasureTheory.extend_iUnion","line":1410,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">f</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <span class=\"fn\">β</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1399-L1403","name":"MeasureTheory.extend_mono'","line":1399,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_mono'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄ (<span class=\"fn\">hs₁</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>) (<span class=\"fn\">hs₂</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₂</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₁</span> <span class=\"fn\">hs₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs₂</span></span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1384-L1392","name":"MeasureTheory.extend_iUnion_le_tsum_nat'","line":1384,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion_le_tsum_nat'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion_le_tsum_nat'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_iUnion_le_tsum_nat'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄ (<span class=\"fn\">hm</span> : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1373-L1379","name":"MeasureTheory.extend_iUnion_nat","line":1373,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_iUnion_nat\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_iUnion_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(PU : <span class=\"fn\">∀ ⦃<span class=\"fn\">f</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>⦄, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mU : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1369-L1370","name":"MeasureTheory.extend_empty","line":1369,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(P0 : <span class=\"fn\"><span class=\"fn\">P</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a> <span class=\"fn\">P0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1344-L1345","name":"MeasureTheory.extend_top","line":1344,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">x</span></span>) =&gt; <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1337-L1340","name":"MeasureTheory.extend_congr","line":1337,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_congr\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Pb : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mb : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">β</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Pb</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sa : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{sb : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hP : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">sa</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">Pb</span> <span class=\"fn\">sb</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\">∀ (<span class=\"fn\">ha</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">sa</span></span>) (<span class=\"fn\">hb</span> : <span class=\"fn\"><span class=\"fn\">Pb</span> <span class=\"fn\">sb</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">sa</span> <span class=\"fn\">ha</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">mb</span> <span class=\"fn\">sb</span> <span class=\"fn\">hb</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">sa</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">mb</span> <span class=\"fn\">sb</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1330-L1333","name":"MeasureTheory.le_extend","line":1330,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.le_extend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.le_extend\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">le_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1320-L1327","name":"MeasureTheory.smul_extend","line":1320,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.smul_extend","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.smul_extend\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">smul_extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/SMulWithZero.html#SMulWithZero\">SMulWithZero</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#NoZeroSMulDivisors\">NoZeroSMulDivisors</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) (<span class=\"fn\">h</span> : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">h</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1317-L1317","name":"MeasureTheory.extend_eq_top","line":1317,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_eq_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_eq_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_eq_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1314-L1314","name":"MeasureTheory.extend_eq","line":1314,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\">MeasureTheory.extend</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1310-L1311","name":"MeasureTheory.extend","line":1310,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend","doc":"We can trivially extend a function defined on a subclass of objects (with codomain `ℝ≥0∞`)\nto all objects by defining it to be `∞` on the objects not in the class. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.extend\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">extend</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{P : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Prop</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\">(<span class=\"fn\">s</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">P</span> <span class=\"fn\">s</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1279-L1281","name":"MeasureTheory.OuterMeasure.restrict_sInf_eq_sInf_restrict","line":1279,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_sInf_eq_sInf_restrict","doc":"This proves that Inf and restrict commute for outer measures, so long as the set of\nouter measures is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_sInf_eq_sInf_restrict\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_sInf_eq_sInf_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1270-L1274","name":"MeasureTheory.OuterMeasure.restrict_biInf","line":1270,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_biInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_biInf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_biInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1265-L1267","name":"MeasureTheory.OuterMeasure.restrict_iInf","line":1265,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_iInf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1255-L1261","name":"MeasureTheory.OuterMeasure.restrict_iInf_restrict","line":1255,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_iInf_restrict","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_iInf_restrict\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_iInf_restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1248-L1252","name":"MeasureTheory.OuterMeasure.map_biInf_comap","line":1248,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_biInf_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_biInf_comap\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_biInf_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1234-L1245","name":"MeasureTheory.OuterMeasure.map_iInf_comap","line":1234,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iInf_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iInf_comap\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_iInf_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1228-L1231","name":"MeasureTheory.OuterMeasure.map_iInf","line":1228,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iInf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Image.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1218-L1225","name":"MeasureTheory.OuterMeasure.comap_iInf","line":1218,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_iInf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_iInf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_iInf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1213-L1215","name":"MeasureTheory.OuterMeasure.map_iInf_le","line":1213,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iInf_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iInf_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_iInf_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1208-L1210","name":"MeasureTheory.OuterMeasure.biInf_apply'","line":1208,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.biInf_apply'","doc":"The value of the Infimum of a nonempty family of outer measures on a set is not simply\nthe minimum value of a measure on that set: it is the infimum sum of measures of countable set of\nsets that covers that set, where a different measure can be used for each set in the cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.biInf_apply'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">biInf_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1199-L1202","name":"MeasureTheory.OuterMeasure.biInf_apply","line":1199,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.biInf_apply","doc":"The value of the Infimum of a nonempty family of outer measures on a set is not simply\nthe minimum value of a measure on that set: it is the infimum sum of measures of countable set of\nsets that covers that set, where a different measure can be used for each set in the cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.biInf_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">biInf_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">ι</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">I</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨅ i ∈ <span class=\"fn\">I</span>, <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1190-L1193","name":"MeasureTheory.OuterMeasure.iInf_apply'","line":1190,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iInf_apply'","doc":"The value of the Infimum of a family of outer measures on a nonempty set is not simply\nthe minimum value of a measure on that set: it is the infimum sum of measures of countable set of\nsets that covers that set, where a different measure can be used for each set in the cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iInf_apply'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iInf_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1181-L1184","name":"MeasureTheory.OuterMeasure.iInf_apply","line":1181,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iInf_apply","doc":"The value of the Infimum of a nonempty family of outer measures on a set is not simply\nthe minimum value of a measure on that set: it is the infimum sum of measures of countable set of\nsets that covers that set, where a different measure can be used for each set in the cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iInf_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iInf_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">ι</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1172-L1175","name":"MeasureTheory.OuterMeasure.sInf_apply'","line":1172,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInf_apply'","doc":"The value of the Infimum of a set of outer measures on a nonempty set is not simply\nthe minimum value of a measure on that set: it is the infimum sum of measures of countable set of\nsets that covers that set, where a different measure can be used for each set in the cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInf_apply'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sInf_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨅ μ ∈ <span class=\"fn\">m</span>, <span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1163-L1166","name":"MeasureTheory.OuterMeasure.sInf_apply","line":1163,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInf_apply","doc":"The value of the Infimum of a nonempty set of outer measures on a set is not simply\nthe minimum value of a measure on that set: it is the infimum sum of measures of countable set of\nsets that covers that set, where a different measure can be used for each set in the cover. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInf_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sInf_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨅ μ ∈ <span class=\"fn\">m</span>, <span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1149-L1157","name":"MeasureTheory.OuterMeasure.iSup_sInfGen_nonempty","line":1149,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iSup_sInfGen_nonempty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iSup_sInfGen_nonempty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iSup_sInfGen_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨆ (_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">t</span></span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen\">MeasureTheory.OuterMeasure.sInfGen</a> <span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ μ ∈ <span class=\"fn\">m</span>, <span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1139-L1146","name":"MeasureTheory.OuterMeasure.sInf_eq_boundedBy_sInfGen","line":1139,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInf_eq_boundedBy_sInfGen","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInf_eq_boundedBy_sInfGen\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sInf_eq_boundedBy_sInfGen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#InfSet.sInf\">sInf</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen\">MeasureTheory.OuterMeasure.sInfGen</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1134-L1136","name":"MeasureTheory.OuterMeasure.sInfGen_def","line":1134,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen_def\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sInfGen_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen\">MeasureTheory.OuterMeasure.sInfGen</a> <span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ μ ∈ <span class=\"fn\">m</span>, <span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1130-L1131","name":"MeasureTheory.OuterMeasure.sInfGen","line":1130,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen","doc":"Given a set of outer measures, we define a new function that on a set `s` is defined to be the\ninfimum of `μ(s)` for the outer measures `μ` in the collection. We ensure that this\nfunction is defined to be `0` on `∅`, even if the collection of outer measures is empty.\nThe outer measure generated by this function is the infimum of the given outer measures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sInfGen\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sInfGen</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1118-L1121","name":"MeasureTheory.OuterMeasure.dirac_caratheodory","line":1118,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">dirac_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac\">MeasureTheory.OuterMeasure.dirac</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1110-L1114","name":"MeasureTheory.OuterMeasure.le_smul_caratheodory","line":1110,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_smul_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_smul_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_smul_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1105-L1107","name":"MeasureTheory.OuterMeasure.le_sum_caratheodory","line":1105,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_sum_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_sum_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_sum_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⨅ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum\">MeasureTheory.OuterMeasure.sum</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1100-L1102","name":"MeasureTheory.OuterMeasure.le_add_caratheodory","line":1100,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_add_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_add_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_add_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">m₁</span></span> <a href=\"./Mathlib/Order/Basic.html#Inf.inf\">⊓</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">m₂</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m₂</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1093-L1097","name":"MeasureTheory.OuterMeasure.top_caratheodory","line":1093,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.top_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.top_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">top_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1089-L1090","name":"MeasureTheory.OuterMeasure.zero_caratheodory","line":1089,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.zero_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.zero_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">zero_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\">MeasureTheory.OuterMeasure.caratheodory</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1078-L1085","name":"MeasureTheory.OuterMeasure.boundedBy_caratheodory","line":1078,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1060-L1075","name":"MeasureTheory.OuterMeasure.ofFunction_caratheodory","line":1060,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h₀ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1050-L1053","name":"MeasureTheory.OuterMeasure.iUnion_eq_of_caratheodory","line":1050,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_eq_of_caratheodory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_eq_of_caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_eq_of_caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1045-L1047","name":"MeasureTheory.OuterMeasure.isCaratheodory_iff_le","line":1045,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iff_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iff_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_iff_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1040-L1042","name":"MeasureTheory.OuterMeasure.isCaratheodory_iff","line":1040,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSet\">MeasurableSet</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1034-L1037","name":"MeasureTheory.OuterMeasure.caratheodory","line":1034,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory","doc":"Given an outer measure `μ`, the Carathéodory-measurable space is\ndefined such that `s` is measurable if `∀t, μ t = μ (t ∩ s) + μ (t \\ s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">caratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/MeasurableSpace/Defs.html#MeasurableSpace\">MeasurableSpace</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1025-L1029","name":"MeasureTheory.OuterMeasure.caratheodoryDynkin","line":1025,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodoryDynkin","doc":"The Carathéodory-measurable sets for an outer measure `m` form a Dynkin system.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.caratheodoryDynkin\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">caratheodoryDynkin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/PiSystem.html#MeasurableSpace.DynkinSystem\">MeasurableSpace.DynkinSystem</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L1014-L1021","name":"MeasureTheory.OuterMeasure.f_iUnion","line":1014,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.f_iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.f_iUnion\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">f_iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L997-L1011","name":"MeasureTheory.OuterMeasure.isCaratheodory_iUnion_nat","line":997,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iUnion_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iUnion_nat\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_iUnion_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L986-L994","name":"MeasureTheory.OuterMeasure.isCaratheodory_sum","line":986,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_sum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_sum\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">Disjoint</span> <a href=\"./Mathlib/Init/Function.html#Function.onFun\">on</a> <span class=\"fn\">s</span></span>)</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L980-L983","name":"MeasureTheory.OuterMeasure.isCaratheodory_inter","line":980,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_inter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_inter\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L970-L977","name":"MeasureTheory.OuterMeasure.isCaratheodory_iUnion_lt","line":970,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iUnion_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iUnion_lt\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_iUnion_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">∀ <span class=\"fn\">i</span> &lt; <span class=\"fn\">n</span>, <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span>)</span> →\n  <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⋃ (_ : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L965-L967","name":"MeasureTheory.OuterMeasure.measure_inter_union","line":965,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.measure_inter_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.measure_inter_union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">measure_inter_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s₂</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">s₂</span></span>)</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s₁</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s₂</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L957-L962","name":"MeasureTheory.OuterMeasure.isCaratheodory_union","line":957,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">s₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L953-L954","name":"MeasureTheory.OuterMeasure.isCaratheodory_compl_iff","line":953,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_compl_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_compl_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_compl_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">s</span><a href=\"./Mathlib/Order/Basic.html#HasCompl.compl\">ᶜ</a></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L948-L949","name":"MeasureTheory.OuterMeasure.isCaratheodory_compl","line":948,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_compl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_compl\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_compl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\"><span class=\"fn\">s₁</span><a href=\"./Mathlib/Order/Basic.html#HasCompl.compl\">ᶜ</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L945-L945","name":"MeasureTheory.OuterMeasure.isCaratheodory_empty","line":945,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L939-L941","name":"MeasureTheory.OuterMeasure.isCaratheodory_iff_le'","line":939,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iff_le'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isCaratheodory_iff_le'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isCaratheodory_iff_le'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\">MeasureTheory.OuterMeasure.IsCaratheodory</a> <span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L935-L936","name":"MeasureTheory.OuterMeasure.IsCaratheodory","line":935,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory","doc":"A set `s` is Carathéodory-measurable for an outer measure `m` if for all sets `t` we have\n`m t = m (t ∩ s) + m (t \\ s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.IsCaratheodory\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">IsCaratheodory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L914-L918","name":"MeasureTheory.OuterMeasure.boundedBy_union_of_top_of_nonempty_inter","line":914,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_union_of_top_of_nonempty_inter","doc":"If `m u = ∞` for any set `u` that has nonempty intersection both with `s` and `t`, then\n`μ (s ∪ t) = μ s + μ t`, where `μ = MeasureTheory.OuterMeasure.boundedBy m`.\n\nE.g., if `α` is an (e)metric space and `m u = ∞` on any set of diameter `≥ r`, then this lemma\nimplies that `μ (s ∪ t) = μ s + μ t` on any two sets such that `r ≤ edist x y` for all `x ∈ s`\nand `y ∈ t`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_union_of_top_of_nonempty_inter\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_union_of_top_of_nonempty_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">u</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">u</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L896-L905","name":"MeasureTheory.OuterMeasure.comap_boundedBy","line":896,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_boundedBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_boundedBy\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_boundedBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\">{ <span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> // <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span> }</span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span></span></span>)</span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L890-L893","name":"MeasureTheory.OuterMeasure.smul_boundedBy","line":890,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_boundedBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_boundedBy\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">smul_boundedBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L885-L887","name":"MeasureTheory.OuterMeasure.boundedBy_zero","line":885,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L877-L881","name":"MeasureTheory.OuterMeasure.boundedBy_top","line":877,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L869-L873","name":"MeasureTheory.OuterMeasure.le_boundedBy'","line":869,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_boundedBy'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_boundedBy'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_boundedBy'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L864-L866","name":"MeasureTheory.OuterMeasure.le_boundedBy","line":864,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_boundedBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_boundedBy\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_boundedBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L860-L861","name":"MeasureTheory.OuterMeasure.boundedBy_eq_self","line":860,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_eq_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_eq_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_eq_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L854-L856","name":"MeasureTheory.OuterMeasure.boundedBy_eq","line":854,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_subadd : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L848-L851","name":"MeasureTheory.OuterMeasure.boundedBy_apply","line":848,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">⨆ (_ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L840-L845","name":"MeasureTheory.OuterMeasure.boundedBy_eq_ofFunction","line":840,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_eq_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_eq_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_eq_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L836-L837","name":"MeasureTheory.OuterMeasure.boundedBy_le","line":836,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\">MeasureTheory.OuterMeasure.boundedBy</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L830-L831","name":"MeasureTheory.OuterMeasure.boundedBy","line":830,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy","doc":"Given any function `m` assigning measures to sets, there is a unique maximal outer measure `μ`\nsatisfying `μ s ≤ m s` for all `s : Set α`. This is the same as `OuterMeasure.ofFunction`,\nexcept that it doesn't require `m ∅ = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.boundedBy\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">boundedBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L812-L818","name":"MeasureTheory.OuterMeasure.smul_ofFunction","line":812,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">smul_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L803-L809","name":"MeasureTheory.OuterMeasure.restrict_ofFunction","line":803,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L790-L800","name":"MeasureTheory.OuterMeasure.map_ofFunction","line":790,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">m_empty</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L782-L787","name":"MeasureTheory.OuterMeasure.map_ofFunction_le","line":782,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_ofFunction_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_ofFunction_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_ofFunction_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">m_empty</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L767-L779","name":"MeasureTheory.OuterMeasure.comap_ofFunction","line":767,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span>)</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L733-L763","name":"MeasureTheory.OuterMeasure.ofFunction_union_of_top_of_nonempty_inter","line":733,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_union_of_top_of_nonempty_inter","doc":"If `m u = ∞` for any set `u` that has nonempty intersection both with `s` and `t`, then\n`μ (s ∪ t) = μ s + μ t`, where `μ = MeasureTheory.OuterMeasure.ofFunction m m_empty`.\n\nE.g., if `α` is an (e)metric space and `m u = ∞` on any set of diameter `≥ r`, then this lemma\nimplies that `μ (s ∪ t) = μ s + μ t` on any two sets such that `r ≤ edist x y` for all `x ∈ s`\nand `y ∈ t`.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_union_of_top_of_nonempty_inter\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction_union_of_top_of_nonempty_inter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">u</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">u</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">u</span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">t</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L723-L724","name":"MeasureTheory.OuterMeasure.ofFunction_eq_sSup","line":723,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_eq_sSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_eq_sSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction_eq_sSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span> | <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L718-L720","name":"MeasureTheory.OuterMeasure.isGreatest_ofFunction","line":718,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isGreatest_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.isGreatest_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">isGreatest_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Basic.html#IsGreatest\">IsGreatest</a> <span class=\"fn\">{<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span> | <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span>}</span>\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L710-L715","name":"MeasureTheory.OuterMeasure.le_ofFunction","line":710,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_ofFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L703-L707","name":"MeasureTheory.OuterMeasure.ofFunction_eq","line":703,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_eq\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_mono : <span class=\"fn\">∀ ⦃<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>⦄, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_subadd : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L696-L700","name":"MeasureTheory.OuterMeasure.ofFunction_le","line":696,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L689-L691","name":"MeasureTheory.OuterMeasure.ofFunction_apply","line":689,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\">MeasureTheory.OuterMeasure.ofFunction</a> <span class=\"fn\">m</span> <span class=\"fn\">m_empty</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (t : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.iUnion\">Set.iUnion</a> <span class=\"fn\">t</span></span></span>), <span class=\"fn\">∑' (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">n</span></span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L652-L686","name":"MeasureTheory.OuterMeasure.ofFunction","line":652,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction","doc":"Given any function `m` assigning measures to sets satisying `m ∅ = 0`, there is\na unique maximal outer measure `μ` satisfying `μ s ≤ m s` for all `s : Set α`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ofFunction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ofFunction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m_empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L638-L639","name":"MeasureTheory.OuterMeasure.map_top_of_surjective","line":638,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_top_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_top_of_surjective\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_top_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L631-L634","name":"MeasureTheory.OuterMeasure.map_top","line":631,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Image.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L627-L628","name":"MeasureTheory.OuterMeasure.comap_top","line":627,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_top","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L622-L623","name":"MeasureTheory.OuterMeasure.top_apply'","line":622,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.top_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.top_apply'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">top_apply'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨅ (_ : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>), <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L617-L619","name":"MeasureTheory.OuterMeasure.top_apply","line":617,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.top_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.top_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">top_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L612-L613","name":"MeasureTheory.OuterMeasure.comap_map","line":612,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L608-L609","name":"MeasureTheory.OuterMeasure.le_comap_map","line":608,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_comap_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_comap_map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_comap_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L603-L605","name":"MeasureTheory.OuterMeasure.map_comap_of_surjective","line":603,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_comap_of_surjective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_comap_of_surjective\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_comap_of_surjective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Surjective\">Function.Surjective</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L598-L600","name":"MeasureTheory.OuterMeasure.map_le_restrict_range","line":598,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_le_restrict_range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_le_restrict_range\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_le_restrict_range</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ma : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{mb : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">ma</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Image.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">mb</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">ma</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">mb</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L593-L594","name":"MeasureTheory.OuterMeasure.restrict_le_self","line":593,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_le_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_le_self\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_le_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L589-L590","name":"MeasureTheory.OuterMeasure.map_comap_le","line":589,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_comap_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_comap_le\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_comap_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L585-L586","name":"MeasureTheory.OuterMeasure.map_comap","line":585,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_comap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_comap\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Image.html#Set.range\">Set.range</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L581-L582","name":"MeasureTheory.OuterMeasure.restrict_iSup","line":581,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_iSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L576-L577","name":"MeasureTheory.OuterMeasure.restrict_empty","line":576,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L571-L572","name":"MeasureTheory.OuterMeasure.restrict_univ","line":571,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_univ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_univ\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">Set.univ</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L564-L567","name":"MeasureTheory.OuterMeasure.restrict_mono","line":564,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m' : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">t</span></span>)</span> <span class=\"fn\">m'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L559-L560","name":"MeasureTheory.OuterMeasure.restrict_apply","line":559,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\">MeasureTheory.OuterMeasure.restrict</a> <span class=\"fn\">s</span></span>)</span> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L554-L555","name":"MeasureTheory.OuterMeasure.restrict","line":554,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict","doc":"Restrict an `OuterMeasure` to a set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.restrict\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">restrict</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L548-L550","name":"MeasureTheory.OuterMeasure.comap_iSup","line":548,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_iSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L544-L544","name":"MeasureTheory.OuterMeasure.comap_mono","line":544,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L539-L540","name":"MeasureTheory.OuterMeasure.comap_apply","line":539,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\">MeasureTheory.OuterMeasure.comap</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Init/Set.html#Set.image\">''</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L525-L535","name":"MeasureTheory.OuterMeasure.comap","line":525,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap","doc":"Pullback of an `OuterMeasure`: `comap f μ s = μ (f '' s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.comap\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">comap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L519-L521","name":"MeasureTheory.OuterMeasure.smul_dirac_apply","line":519,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_dirac_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_dirac_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">smul_dirac_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac\">MeasureTheory.OuterMeasure.dirac</a> <span class=\"fn\">b</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Function/Indicator.html#Set.indicator\">Set.indicator</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L515-L516","name":"MeasureTheory.OuterMeasure.sum_apply","line":515,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sum_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum\">MeasureTheory.OuterMeasure.sum</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">∑' (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L506-L511","name":"MeasureTheory.OuterMeasure.sum","line":506,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum","doc":"The sum of an (arbitrary) collection of outer measures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sum\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sum</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L501-L502","name":"MeasureTheory.OuterMeasure.dirac_apply","line":501,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">dirac_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac\">MeasureTheory.OuterMeasure.dirac</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Function/Indicator.html#Set.indicator\">Set.indicator</a> <span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L485-L497","name":"MeasureTheory.OuterMeasure.dirac","line":485,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac","doc":"The dirac outer measure. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.dirac\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">dirac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L481-L481","name":"MeasureTheory.OuterMeasure.instLawfulFunctor","line":481,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instLawfulFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instLawfulFunctor\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instLawfulFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/Lawful.html#LawfulFunctor\">LawfulFunctor</a> <a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L478-L478","name":"MeasureTheory.OuterMeasure.instFunctor","line":478,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instFunctor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instFunctor\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instFunctor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L474-L475","name":"MeasureTheory.OuterMeasure.map_iSup","line":474,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_iSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L469-L470","name":"MeasureTheory.OuterMeasure.map_sup","line":469,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_sup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m' : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Order/Basic.html#Sup.sup\">⊔</a> <span class=\"fn\">m'</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Mathlib/Order/Basic.html#Sup.sup\">⊔</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L465-L465","name":"MeasureTheory.OuterMeasure.map_mono","line":465,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L459-L461","name":"MeasureTheory.OuterMeasure.map_map","line":459,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{γ : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">γ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">g</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">f</span></span>)</span></span>)</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L454-L455","name":"MeasureTheory.OuterMeasure.map_id","line":454,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_id\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">id</span></span>)</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L449-L450","name":"MeasureTheory.OuterMeasure.map_apply","line":449,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\">MeasureTheory.OuterMeasure.map</a> <span class=\"fn\">f</span></span>)</span> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Data/Set/Image.html#Set.preimage\">⁻¹'</a> <span class=\"fn\">s</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L438-L445","name":"MeasureTheory.OuterMeasure.map","line":438,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map","doc":"The pushforward of `m` along `f`. The outer measure on `s` is defined to be `m (f ⁻¹' s)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.map\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">→ₗ[</a><a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a><a href=\"./Mathlib/Algebra/Module/LinearMap.html#LinearMap\">]</a> <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">β</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L432-L434","name":"MeasureTheory.OuterMeasure.mono''","line":432,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono''","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono''\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">mono''</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L424-L426","name":"MeasureTheory.OuterMeasure.smul_iSup","line":424,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_iSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">smul_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L420-L421","name":"MeasureTheory.OuterMeasure.sup_apply","line":420,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sup_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sup_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Mathlib/Order/Basic.html#Sup.sup\">⊔</a> <span class=\"fn\">m₂</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Mathlib/Order/Basic.html#Sup.sup\">⊔</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L415-L416","name":"MeasureTheory.OuterMeasure.coe_iSup","line":415,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_iSup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_iSup\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coe_iSup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L410-L411","name":"MeasureTheory.OuterMeasure.iSup_apply","line":410,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iSup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iSup_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iSup_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Sort</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (i : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L404-L406","name":"MeasureTheory.OuterMeasure.sSup_apply","line":404,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sSup_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sSup_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sSup_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ms : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet.sSup\">sSup</a> <span class=\"fn\">ms</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ m ∈ <span class=\"fn\">ms</span>, <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L397-L400","name":"MeasureTheory.OuterMeasure.instCompleteLattice","line":397,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instCompleteLattice","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instCompleteLattice\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instCompleteLattice</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#CompleteLattice\">CompleteLattice</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L383-L394","name":"MeasureTheory.OuterMeasure.instSupSet","line":383,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instSupSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instSupSet\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instSupSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/CompleteLattice.html#SupSet\">SupSet</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L377-L378","name":"MeasureTheory.OuterMeasure.univ_eq_zero_iff","line":377,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.univ_eq_zero_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.univ_eq_zero_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">univ_eq_zero_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">Set.univ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L372-L374","name":"MeasureTheory.OuterMeasure.OuterMeasure.orderBot","line":372,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.OuterMeasure.orderBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.OuterMeasure.orderBot\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">orderBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L365-L369","name":"MeasureTheory.OuterMeasure.instPartialOrder","line":365,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instPartialOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instPartialOrder\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instPartialOrder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Order/Defs.html#PartialOrder\">PartialOrder</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L361-L362","name":"MeasureTheory.OuterMeasure.coe_bot","line":361,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_bot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_bot\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coe_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L356-L357","name":"MeasureTheory.OuterMeasure.instBot","line":356,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instBot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instBot\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instBot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#Bot\">Bot</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L351-L353","name":"MeasureTheory.OuterMeasure.instModule","line":351,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instModule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instModule\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instModule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Basic.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L346-L348","name":"MeasureTheory.OuterMeasure.instDistribMulAction","line":346,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instDistribMulAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instDistribMulAction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instDistribMulAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#DistribMulAction\">DistribMulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L340-L343","name":"MeasureTheory.OuterMeasure.coeFnAddMonoidHom","line":340,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coeFnAddMonoidHom","doc":"`(⇑)` as an `AddMonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coeFnAddMonoidHom\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coeFnAddMonoidHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddMonoidHom\">→+</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L339-L339","name":"MeasureTheory.OuterMeasure.coeFnAddMonoidHom_apply","line":339,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coeFnAddMonoidHom_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coeFnAddMonoidHom_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coeFnAddMonoidHom_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">MeasureTheory.OuterMeasure.coeFnAddMonoidHom</span> <span class=\"fn\">self</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">self</span> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L333-L335","name":"MeasureTheory.OuterMeasure.addCommMonoid","line":333,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.addCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.addCommMonoid\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">addCommMonoid</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L328-L330","name":"MeasureTheory.OuterMeasure.instMulAction","line":328,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instMulAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instMulAction\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instMulAction</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Monoid\">Monoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#MulAction\">MulAction</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L321-L323","name":"MeasureTheory.OuterMeasure.instIsCentralScalar","line":321,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instIsCentralScalar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instIsCentralScalar\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instIsCentralScalar</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsCentralScalar\">IsCentralScalar</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L316-L318","name":"MeasureTheory.OuterMeasure.instIsScalarTower","line":316,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instIsScalarTower","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instIsScalarTower\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instIsScalarTower</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R'</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R'</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L312-L313","name":"MeasureTheory.OuterMeasure.instSMulCommClass","line":312,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instSMulCommClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instSMulCommClass\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instSMulCommClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R' : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R'</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R'</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">R</span> <span class=\"fn\">R'</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L308-L309","name":"MeasureTheory.OuterMeasure.smul_apply","line":308,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.smul_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">smul_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L304-L305","name":"MeasureTheory.OuterMeasure.coe_smul","line":304,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_smul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_smul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coe_smul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">m</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Defs.html#HSMul.hSMul\">•</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L291-L301","name":"MeasureTheory.OuterMeasure.instSMul","line":291,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instSMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instSMul\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instSMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/GroupTheory/GroupAction/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">R</span> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a> <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#SMul\">SMul</a> <span class=\"fn\">R</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L281-L282","name":"MeasureTheory.OuterMeasure.add_apply","line":281,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.add_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.add_apply\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">add_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m₂</span></span>)</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L277-L278","name":"MeasureTheory.OuterMeasure.coe_add","line":277,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_add\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coe_add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L263-L273","name":"MeasureTheory.OuterMeasure.instAdd","line":263,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instAdd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instAdd\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instAdd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Add\">Add</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L259-L260","name":"MeasureTheory.OuterMeasure.instInhabited","line":259,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instInhabited","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instInhabited\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instInhabited</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L255-L256","name":"MeasureTheory.OuterMeasure.coe_zero","line":255,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coe_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L247-L251","name":"MeasureTheory.OuterMeasure.instZero","line":247,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instZero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#Zero\">Zero</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L242-L244","name":"MeasureTheory.OuterMeasure.ext_nonempty","line":242,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ext_nonempty","doc":"A version of `MeasureTheory.OuterMeasure.ext` that assumes `μ₁ s = μ₂ s` on all *nonempty*\nsets `s`, and gets `μ₁ ∅ = μ₂ ∅` from `MeasureTheory.OuterMeasure.empty'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ext_nonempty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ext_nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set.Nonempty\">Set.Nonempty</a> <span class=\"fn\">s</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">μ₂</span> <span class=\"fn\">s</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L236-L237","name":"MeasureTheory.OuterMeasure.ext","line":236,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.ext\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ₁ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ₂ : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">μ₁</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">μ₂</span> <span class=\"fn\">s</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">μ₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L231-L232","name":"MeasureTheory.OuterMeasure.coe_fn_injective","line":231,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_fn_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.coe_fn_injective\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">coe_fn_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">fun (<span class=\"fn\">μ</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>) (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">μ</span> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L227-L228","name":"MeasureTheory.OuterMeasure.union_null","line":227,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.union_null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.union_null\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">union_null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">s₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L218-L224","name":"MeasureTheory.OuterMeasure.diff_null","line":218,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.diff_null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.diff_null\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">diff_null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">t</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L212-L215","name":"MeasureTheory.OuterMeasure.le_inter_add_diff","line":212,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_inter_add_diff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.le_inter_add_diff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">le_inter_add_diff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#Inter.inter\">∩</a> <span class=\"fn\">s</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\">s</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L191-L209","name":"MeasureTheory.OuterMeasure.iUnion_nat_of_monotone_of_tsum_ne_top","line":191,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_nat_of_monotone_of_tsum_ne_top","doc":"If `s : ℕ → Set α` is a monotone sequence of sets such that `∑' k, m (s (k + 1) \\ s k) ≠ ∞`,\nthen `m (⋃ n, s n) = ⨆ n, m (s n)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_nat_of_monotone_of_tsum_ne_top\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_nat_of_monotone_of_tsum_ne_top</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_mono : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span></span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">∑' (k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span>)</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/BoundedOrder.html#Top.top\">⊤</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L173-L186","name":"MeasureTheory.OuterMeasure.iUnion_of_tendsto_zero","line":173,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_of_tendsto_zero","doc":"If `s : ι → Set α` is a sequence of sets, `S = ⋃ n, s n`, and `m (S \\ s n)` tends to zero along\nsome nontrivial filter (usually `atTop` on `ι = ℕ`), then `m S = ⨆ n, m (s n)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_of_tendsto_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_of_tendsto_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter\">Filter</a> <span class=\"fn\">ι</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.NeBot\">Filter.NeBot</a> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Basic.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">k</span> : <span class=\"fn\">ι</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">⋃ (n : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span></span></span>)</span> <a href=\"./Std/Classes/SetNotation.html#SDiff.sdiff\">\\</a> <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">k</span></span></span>)</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhds\">nhds</a> <span class=\"fn\">0</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (n : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (n : <span class=\"fn\">ι</span>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">n</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L164-L168","name":"MeasureTheory.OuterMeasure.exists_mem_forall_mem_nhds_within_pos","line":164,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_mem_forall_mem_nhds_within_pos","doc":"If `m s ≠ 0`, then for some point `x ∈ s` and any `t ∈ 𝓝[s] x` we have `0 < m t`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.exists_mem_forall_mem_nhds_within_pos\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">exists_mem_forall_mem_nhds_within_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ x ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∀ <span class=\"fn\">t</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span></span>, <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L154-L160","name":"MeasureTheory.OuterMeasure.null_of_locally_null","line":154,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.null_of_locally_null","doc":"If a set has zero measure in a neighborhood of each of its points, then it has zero measure\nin a second-countable space. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.null_of_locally_null\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">null_of_locally_null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#TopologicalSpace\">TopologicalSpace</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/Bases.html#SecondCountableTopology\">SecondCountableTopology</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\">∀ <span class=\"fn\">x</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\">∃ u ∈ <span class=\"fn\"><a href=\"./Mathlib/Topology/Basic.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">x</span> <span class=\"fn\">s</span></span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L148-L149","name":"MeasureTheory.OuterMeasure.union","line":148,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.union","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.union\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">union</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#Union.union\">∪</a> <span class=\"fn\">s₂</span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L143-L145","name":"MeasureTheory.OuterMeasure.iUnion_finset","line":143,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_finset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_finset\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_finset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset\">Finset</a> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ i ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/BigOperators/Basic.html#Finset.sum\">Finset.sum</a> <span class=\"fn\">t</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">β</span>) =&gt; <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L139-L140","name":"MeasureTheory.OuterMeasure.sUnion_null_iff","line":139,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sUnion_null_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.sUnion_null_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">sUnion_null_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hS : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/Set/Lattice.html#Set.sUnion\">⋃₀</a> <span class=\"fn\">S</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">s</span> ∈ <span class=\"fn\">S</span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L133-L136","name":"MeasureTheory.OuterMeasure.biUnion_null_iff","line":133,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.biUnion_null_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.biUnion_null_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">biUnion_null_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Countable.html#Set.Countable\">Set.Countable</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ i ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">s</span>, <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">t</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L127-L130","name":"MeasureTheory.OuterMeasure.iUnion_null_iff'","line":127,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_null_iff'","doc":"A version of `iUnion_null_iff` for unions indexed by Props.\nTODO: in the long run it would be better to combine this with `iUnion_null_iff` by\ngeneralising to `Sort`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_null_iff'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_null_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ι : <a href=\"./foundational_types.html\">Prop</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">ι</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">ι</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L118-L120","name":"MeasureTheory.OuterMeasure.iUnion_null_iff","line":118,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_null_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_null_iff\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_null_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L113-L114","name":"MeasureTheory.OuterMeasure.iUnion_null","line":113,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_null\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L108-L110","name":"MeasureTheory.OuterMeasure.iUnion","line":108,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Countable/Defs.html#Countable\">Countable</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <span class=\"fn\">β</span>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <span class=\"fn\">β</span>), <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L103-L105","name":"MeasureTheory.OuterMeasure.pos_of_subset_ne_zero","line":103,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.pos_of_subset_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.pos_of_subset_ne_zero\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">pos_of_subset_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnz : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L99-L100","name":"MeasureTheory.OuterMeasure.mono_null","line":99,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono_null","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono_null\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">mono_null</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L95-L96","name":"MeasureTheory.OuterMeasure.mono'","line":95,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">mono'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">m</span> <span class=\"fn\">s₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L90-L91","name":"MeasureTheory.OuterMeasure.empty'","line":90,"kind":"theorem","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.empty'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.empty'\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">empty'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L81-L82","name":"MeasureTheory.OuterMeasure.instCoeFun","line":81,"kind":"instance","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instCoeFun","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.instCoeFun\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">instCoeFun</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#CoeFun\">CoeFun</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L68-L68","name":"MeasureTheory.OuterMeasure.iUnion_nat","line":68,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.iUnion_nat\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">iUnion_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">↑<span class=\"fn\">self</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L67-L67","name":"MeasureTheory.OuterMeasure.mono","line":67,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mono\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">self</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">↑<span class=\"fn\">self</span> <span class=\"fn\">s₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L66-L66","name":"MeasureTheory.OuterMeasure.empty","line":66,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.empty\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">self</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L65-L65","name":"MeasureTheory.OuterMeasure.measureOf","line":65,"kind":"def","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.measureOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.measureOf\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">measureOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L64-L64","name":"MeasureTheory.OuterMeasure.mk","line":64,"kind":"ctor","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure.mk\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(measureOf : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span> → <a href=\"./Mathlib/Data/Real/ENNReal.html#ENNReal\">ENNReal</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(empty : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">measureOf</span> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mono : <span class=\"fn\">∀ {<span class=\"fn\">s₁ </span>s₂ : <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Std/Classes/SetNotation.html#HasSubset.Subset\">⊆</a> <span class=\"fn\">s₂</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">measureOf</span> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">measureOf</span> <span class=\"fn\">s₂</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iUnion_nat : <span class=\"fn\">∀ (<span class=\"fn\">s</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Mathlib/Init/Set.html#Set\">Set</a> <span class=\"fn\">α</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">measureOf</span> <span class=\"fn\">(<span class=\"fn\">⋃ (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span></span>)</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">∑' (i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">measureOf</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\">MeasureTheory.OuterMeasure</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/3b81a542da60bafaae06756ff194ad50e9c83921/Mathlib/MeasureTheory/Measure/OuterMeasure.lean#L64-L68","name":"MeasureTheory.OuterMeasure","line":64,"kind":"structure","docLink":"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure","doc":"An outer measure is a countably subadditive monotone function that sends `∅` to `0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/MeasureTheory/Measure/OuterMeasure.html#MeasureTheory.OuterMeasure\"><span class=\"name\">MeasureTheory</span>.<span class=\"name\">OuterMeasure</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}