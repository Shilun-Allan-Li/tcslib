{"name":"Aesop.Builder.Apply","instances":[{"typeNames":["Aesop.ApplyBuilderOptions"],"name":"Aesop.instInhabitedApplyBuilderOptions","className":"Inhabited"}],"imports":["Init","Aesop.Builder.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L41-L50","name":"Aesop.RuleBuilder.apply.mkResult","line":41,"kind":"def","docLink":"./Aesop/Builder/Apply.html#Aesop.RuleBuilder.apply.mkResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.RuleBuilder.apply.mkResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">apply</span>.<span class=\"name\">mkResult</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\">Aesop.ApplyBuilderOptions</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L28-L50","name":"Aesop.RuleBuilder.apply","line":28,"kind":"def","docLink":"./Aesop/Builder/Apply.html#Aesop.RuleBuilder.apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.RuleBuilder.apply\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\">Aesop.ApplyBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder\">Aesop.RuleBuilder</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L21-L26","name":"Aesop.instInhabitedApplyBuilderOptions","line":21,"kind":"instance","docLink":"./Aesop/Builder/Apply.html#Aesop.instInhabitedApplyBuilderOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.instInhabitedApplyBuilderOptions\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedApplyBuilderOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\">Aesop.ApplyBuilderOptions</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L19-L19","name":"Aesop.ApplyBuilderOptions.indexTransparency","line":19,"kind":"def","docLink":"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions.indexTransparency","doc":"The transparency used to index the rule. The rule is not indexed unless\nthis is `.reducible`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions.indexTransparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">ApplyBuilderOptions</span>.<span class=\"name\">indexTransparency</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\">Aesop.ApplyBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L16-L16","name":"Aesop.ApplyBuilderOptions.transparency","line":16,"kind":"def","docLink":"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions.transparency","doc":"The transparency used by the rule tactic. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions.transparency\"><span class=\"name\">Aesop</span>.<span class=\"name\">ApplyBuilderOptions</span>.<span class=\"name\">transparency</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\">Aesop.ApplyBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L14-L14","name":"Aesop.ApplyBuilderOptions.mk","line":14,"kind":"ctor","docLink":"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">ApplyBuilderOptions</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toRegularBuilderOptions : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\">Aesop.RegularBuilderOptions</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(transparency : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indexTransparency : <a href=\"./Init/MetaTypes.html#Lean.Meta.TransparencyMode\">Lean.Meta.TransparencyMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\">Aesop.ApplyBuilderOptions</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Apply.lean#L14-L19","name":"Aesop.ApplyBuilderOptions","line":14,"kind":"structure","docLink":"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Apply.html#Aesop.ApplyBuilderOptions\"><span class=\"name\">Aesop</span>.<span class=\"name\">ApplyBuilderOptions</span></a></span><span class=\"decl_extends\">extends</span><span class=\"decl_parent\">\n<span class=\"fn\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularBuilderOptions</span></a></span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}