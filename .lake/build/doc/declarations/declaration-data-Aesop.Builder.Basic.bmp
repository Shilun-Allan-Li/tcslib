{"name":"Aesop.Builder.Basic","instances":[{"typeNames":["Aesop.RegularRuleBuilderResult"],"name":"Aesop.instInhabitedRegularRuleBuilderResult","className":"Inhabited"},{"typeNames":["Aesop.RuleBuilderResult"],"name":"Aesop.instInhabitedRuleBuilderResult","className":"Inhabited"},{"typeNames":["Aesop.RegularBuilderOptions"],"name":"Aesop.instInhabitedRegularBuilderOptions","className":"Inhabited"}],"imports":["Init","Aesop.Rule"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L81-L85","name":"Aesop.RegularBuilderOptions.getIndexingModeM","line":81,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.getIndexingModeM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.getIndexingModeM\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularBuilderOptions</span>.<span class=\"name\">getIndexingModeM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(dflt : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(opts : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\">Aesop.RegularBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L78-L79","name":"Aesop.RegularBuilderOptions.default","line":78,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.default","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.default\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularBuilderOptions</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\">Aesop.RegularBuilderOptions</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L74-L74","name":"Aesop.instInhabitedRegularBuilderOptions","line":74,"kind":"instance","docLink":"./Aesop/Builder/Basic.html#Aesop.instInhabitedRegularBuilderOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.instInhabitedRegularBuilderOptions\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRegularBuilderOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\">Aesop.RegularBuilderOptions</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L73-L73","name":"Aesop.RegularBuilderOptions.indexingMode?","line":73,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.indexingMode?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.indexingMode?\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularBuilderOptions</span>.<span class=\"name\">indexingMode?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\">Aesop.RegularBuilderOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L72-L72","name":"Aesop.RegularBuilderOptions.mk","line":72,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularBuilderOptions</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(indexingMode? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\">Aesop.RegularBuilderOptions</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L72-L74","name":"Aesop.RegularBuilderOptions","line":72,"kind":"structure","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularBuilderOptions\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularBuilderOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L60-L67","name":"Aesop.RuleBuilder.ofGlobalRuleBuilder","line":60,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilder.ofGlobalRuleBuilder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder.ofGlobalRuleBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">ofGlobalRuleBuilder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Aesop/Rule/Name.html#Aesop.BuilderName\">Aesop.BuilderName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(globalBuilder : <span class=\"fn\"><a href=\"./Aesop/Rule/Name.html#Aesop.PhaseName\">Aesop.PhaseName</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder\">Aesop.RuleBuilder</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L52-L58","name":"Aesop.RuleBuilder.checkConstIsInductive","line":52,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilder.checkConstIsInductive","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder.checkConstIsInductive\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span>.<span class=\"name\">checkConstIsInductive</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(builderName : <a href=\"./Aesop/Rule/Name.html#Aesop.BuilderName\">Aesop.BuilderName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Declaration.html#Lean.InductiveVal\">Lean.InductiveVal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L48-L48","name":"Aesop.RuleBuilder","line":48,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilder","doc":"Invariant: if the `RuleBuilderInput` contains a `RuleBuilderKind.local`,\nthen the builder returns a `RuleBuilderOutput.local`, and similar for\n`RuleBuilderKind.global`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilder\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L41-L41","name":"Aesop.RuleBuilderOutput.local","line":41,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput.local","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput.local\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOutput</span>.<span class=\"name\">local</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput\">Aesop.RuleBuilderOutput</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L40-L40","name":"Aesop.RuleBuilderOutput.global","line":40,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput.global","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput.global\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOutput</span>.<span class=\"name\">global</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput\">Aesop.RuleBuilderOutput</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L39-L41","name":"Aesop.RuleBuilderOutput","line":39,"kind":"inductive","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderOutput\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderOutput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L37-L37","name":"Aesop.instInhabitedRuleBuilderResult","line":37,"kind":"instance","docLink":"./Aesop/Builder/Basic.html#Aesop.instInhabitedRuleBuilderResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.instInhabitedRuleBuilderResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRuleBuilderResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L36-L36","name":"Aesop.RuleBuilderResult.unfold","line":36,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.unfold","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.unfold\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderResult</span>.<span class=\"name\">unfold</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Rule.html#Aesop.UnfoldRule\">Aesop.UnfoldRule</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L35-L35","name":"Aesop.RuleBuilderResult.localSimp","line":35,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.localSimp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.localSimp\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderResult</span>.<span class=\"name\">localSimp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L34-L34","name":"Aesop.RuleBuilderResult.globalSimp","line":34,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.globalSimp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.globalSimp\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderResult</span>.<span class=\"name\">globalSimp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(entries : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpEntry\">Lean.Meta.SimpEntry</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L33-L33","name":"Aesop.RuleBuilderResult.regular","line":33,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.regular","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult.regular\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderResult</span>.<span class=\"name\">regular</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\">Aesop.RegularRuleBuilderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\">Aesop.RuleBuilderResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L32-L37","name":"Aesop.RuleBuilderResult","line":32,"kind":"inductive","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L30-L30","name":"Aesop.instInhabitedRegularRuleBuilderResult","line":30,"kind":"instance","docLink":"./Aesop/Builder/Basic.html#Aesop.instInhabitedRegularRuleBuilderResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.instInhabitedRegularRuleBuilderResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRegularRuleBuilderResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\">Aesop.RegularRuleBuilderResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L29-L29","name":"Aesop.RegularRuleBuilderResult.indexingMode","line":29,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.indexingMode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.indexingMode\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularRuleBuilderResult</span>.<span class=\"name\">indexingMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\">Aesop.RegularRuleBuilderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L28-L28","name":"Aesop.RegularRuleBuilderResult.tac","line":28,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.tac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.tac\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularRuleBuilderResult</span>.<span class=\"name\">tac</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\">Aesop.RegularRuleBuilderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L27-L27","name":"Aesop.RegularRuleBuilderResult.builder","line":27,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.builder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.builder\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularRuleBuilderResult</span>.<span class=\"name\">builder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\">Aesop.RegularRuleBuilderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Rule/Name.html#Aesop.BuilderName\">Aesop.BuilderName</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L26-L26","name":"Aesop.RegularRuleBuilderResult.mk","line":26,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularRuleBuilderResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(builder : <a href=\"./Aesop/Rule/Name.html#Aesop.BuilderName\">Aesop.BuilderName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indexingMode : <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\">Aesop.RegularRuleBuilderResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L26-L30","name":"Aesop.RegularRuleBuilderResult","line":26,"kind":"structure","docLink":"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RegularRuleBuilderResult\"><span class=\"name\">Aesop</span>.<span class=\"name\">RegularRuleBuilderResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L24-L24","name":"Aesop.RuleBuilderInput.kind","line":24,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput.kind\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderInput</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput\">Aesop.RuleBuilderInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind\">Aesop.RuleBuilderKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L23-L23","name":"Aesop.RuleBuilderInput.phase","line":23,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput.phase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput.phase\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderInput</span>.<span class=\"name\">phase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput\">Aesop.RuleBuilderInput</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Rule/Name.html#Aesop.PhaseName\">Aesop.PhaseName</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L22-L22","name":"Aesop.RuleBuilderInput.mk","line":22,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderInput</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(phase : <a href=\"./Aesop/Rule/Name.html#Aesop.PhaseName\">Aesop.PhaseName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind\">Aesop.RuleBuilderKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput\">Aesop.RuleBuilderInput</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L22-L24","name":"Aesop.RuleBuilderInput","line":22,"kind":"structure","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderInput\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderInput</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L18-L20","name":"Aesop.RuleBuilderKind.toRuleIdent","line":18,"kind":"def","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind.toRuleIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind.toRuleIdent\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderKind</span>.<span class=\"name\">toRuleIdent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind\">Aesop.RuleBuilderKind</a> → <a href=\"./Aesop/Rule/Name.html#Aesop.RuleIdent\">Aesop.RuleIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L16-L16","name":"Aesop.RuleBuilderKind.local","line":16,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind.local","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind.local\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderKind</span>.<span class=\"name\">local</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarUserName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind\">Aesop.RuleBuilderKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L15-L15","name":"Aesop.RuleBuilderKind.global","line":15,"kind":"ctor","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind.global","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind.global\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderKind</span>.<span class=\"name\">global</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind\">Aesop.RuleBuilderKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/2ae78a474ddf0a39bc2afb9f9f284d2e64f48a70/Aesop/Builder/Basic.lean#L14-L16","name":"Aesop.RuleBuilderKind","line":14,"kind":"inductive","docLink":"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Builder/Basic.html#Aesop.RuleBuilderKind\"><span class=\"name\">Aesop</span>.<span class=\"name\">RuleBuilderKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}