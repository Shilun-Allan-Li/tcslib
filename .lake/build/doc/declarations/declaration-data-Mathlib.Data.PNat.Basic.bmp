{"name":"Mathlib.Data.PNat.Basic","instances":[{"typeNames":["PNat"],"name":"PNat.instWellFoundedLTPNatToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","className":"IsWellFounded"},{"typeNames":["PNat"],"name":"PNat.instIsWellOrderPNatLtToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","className":"IsWellOrder"},{"typeNames":["PNat","PNat"],"name":"PNat.covariantClass_add_le","className":"CovariantClass"},{"typeNames":["PNat","PNat"],"name":"PNat.covariantClass_add_lt","className":"CovariantClass"},{"typeNames":["PNat","PNat"],"name":"PNat.contravariantClass_add_le","className":"ContravariantClass"},{"typeNames":["PNat","PNat"],"name":"PNat.contravariantClass_add_lt","className":"ContravariantClass"},{"typeNames":["PNat"],"name":"PNat.instOrderBotPNatToLEToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","className":"OrderBot"},{"typeNames":["PNat"],"name":"PNat.instSubPNat","className":"Sub"}],"imports":["Init","Mathlib.Data.PNat.Defs","Mathlib.Data.Nat.Bits","Mathlib.Data.Nat.Order.Basic","Mathlib.Data.Set.Basic","Mathlib.Algebra.GroupWithZero.Divisibility","Mathlib.Algebra.Order.Positive.Ring"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L441-L445","name":"PNat.pos_of_div_pos","line":441,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.pos_of_div_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.pos_of_div_pos\"><span class=\"name\">PNat</span>.<span class=\"name\">pos_of_div_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L437-L438","name":"PNat.dvd_one_iff","line":437,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.dvd_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.dvd_one_iff\"><span class=\"name\">PNat</span>.<span class=\"name\">dvd_one_iff</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L433-L434","name":"PNat.dvd_antisymm","line":433,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.dvd_antisymm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.dvd_antisymm\"><span class=\"name\">PNat</span>.<span class=\"name\">dvd_antisymm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L427-L430","name":"PNat.mul_div_exact","line":427,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mul_div_exact","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mul_div_exact\"><span class=\"name\">PNat</span>.<span class=\"name\">mul_div_exact</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.divExact\">PNat.divExact</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L420-L424","name":"PNat.le_of_dvd","line":420,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.le_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.le_of_dvd\"><span class=\"name\">PNat</span>.<span class=\"name\">le_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L406-L417","name":"PNat.dvd_iff'","line":406,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.dvd_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.dvd_iff'\"><span class=\"name\">PNat</span>.<span class=\"name\">dvd_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L392-L403","name":"PNat.dvd_iff","line":392,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.dvd_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.dvd_iff\"><span class=\"name\">PNat</span>.<span class=\"name\">dvd_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L374-L389","name":"PNat.mod_le","line":374,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mod_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mod_le\"><span class=\"name\">PNat</span>.<span class=\"name\">mod_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L369-L371","name":"PNat.div_add_mod'","line":369,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.div_add_mod'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.div_add_mod'\"><span class=\"name\">PNat</span>.<span class=\"name\">div_add_mod'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">PNat.div</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L364-L366","name":"PNat.mod_add_div'","line":364,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mod_add_div'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mod_add_div'\"><span class=\"name\">PNat</span>.<span class=\"name\">mod_add_div'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">PNat.div</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L360-L361","name":"PNat.div_add_mod","line":360,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.div_add_mod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.div_add_mod\"><span class=\"name\">PNat</span>.<span class=\"name\">div_add_mod</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">PNat.div</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L350-L357","name":"PNat.mod_add_div","line":350,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mod_add_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mod_add_div\"><span class=\"name\">PNat</span>.<span class=\"name\">mod_add_div</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.mod\">PNat.mod</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span>)</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.div\">PNat.div</a> <span class=\"fn\">m</span> <span class=\"fn\">k</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L340-L347","name":"PNat.modDivAux_spec","line":340,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.modDivAux_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.modDivAux_spec\"><span class=\"name\">PNat</span>.<span class=\"name\">modDivAux_spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(q : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">q</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.modDivAux\">PNat.modDivAux</a> <span class=\"fn\">k</span> <span class=\"fn\">r</span> <span class=\"fn\">q</span></span>)</span>.1</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.modDivAux\">PNat.modDivAux</a> <span class=\"fn\">k</span> <span class=\"fn\">r</span> <span class=\"fn\">q</span></span>)</span>.2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">q</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L334-L337","name":"PNat.recOn_succ","line":334,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.recOn_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.recOn_succ\"><span class=\"name\">PNat</span>.<span class=\"name\">recOn_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Basic.html#PNat.recOn\">PNat.recOn</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <span class=\"fn\">p1</span> <span class=\"fn\">hp</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">hp</span> <span class=\"fn\">n</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Basic.html#PNat.recOn\">PNat.recOn</a> <span class=\"fn\">n</span> <span class=\"fn\">p1</span> <span class=\"fn\">hp</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L329-L330","name":"PNat.recOn_one","line":329,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.recOn_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.recOn_one\"><span class=\"name\">PNat</span>.<span class=\"name\">recOn_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Basic.html#PNat.recOn\">PNat.recOn</a> <span class=\"fn\">1</span> <span class=\"fn\">p1</span> <span class=\"fn\">hp</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">p1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L319-L325","name":"PNat.recOn","line":319,"kind":"def","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.recOn","doc":"An induction principle for `ℕ+`: it takes values in `Sort*`, so it applies also to Types,\nnot only to `Prop`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.recOn\"><span class=\"name\">PNat</span>.<span class=\"name\">recOn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p1 : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L305-L313","name":"PNat.caseStrongInductionOn","line":305,"kind":"def","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.caseStrongInductionOn","doc":"Strong induction on `ℕ+`, with `n = 1` treated separately. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.caseStrongInductionOn\"><span class=\"name\">PNat</span>.<span class=\"name\">caseStrongInductionOn</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> → <a href=\"./foundational_types.html\">Sort</a> u_1</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hz : <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\">(<span class=\"fn\">n</span> : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) → <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">m</span> : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">m</span></span></span></span>)</span> → <span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">p</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L299-L301","name":"PNat.exists_eq_succ_of_ne_one","line":299,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.exists_eq_succ_of_ne_one","doc":"If `n : ℕ+` is different from `1`, then it is the successor of some `k : ℕ+`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.exists_eq_succ_of_ne_one\"><span class=\"name\">PNat</span>.<span class=\"name\">exists_eq_succ_of_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span> → <span class=\"fn\">∃ (k : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L291-L295","name":"PNat.add_sub_of_lt","line":291,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.add_sub_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.add_sub_of_lt\"><span class=\"name\">PNat</span>.<span class=\"name\">add_sub_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L283-L288","name":"PNat.sub_coe","line":283,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.sub_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.sub_coe\"><span class=\"name\">PNat</span>.<span class=\"name\">sub_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">b</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span> then <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> else <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L280-L281","name":"PNat.instSubPNat","line":280,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.instSubPNat","doc":"Subtraction a - b is defined in the obvious way when\na > b, and by a - b = 1 if a ≤ b.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.instSubPNat\"><span class=\"name\">PNat</span>.<span class=\"name\">instSubPNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Sub\">Sub</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L273-L274","name":"PNat.pow_coe","line":273,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.pow_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.pow_coe\"><span class=\"name\">PNat</span>.<span class=\"name\">pow_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L266-L267","name":"PNat.coe_bit1","line":266,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.coe_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.coe_bit1\"><span class=\"name\">PNat</span>.<span class=\"name\">coe_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L261-L262","name":"PNat.coe_bit0","line":261,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.coe_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.coe_bit0\"><span class=\"name\">PNat</span>.<span class=\"name\">coe_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">a</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L251-L252","name":"PNat.lt_add_right","line":251,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.lt_add_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.lt_add_right\"><span class=\"name\">PNat</span>.<span class=\"name\">lt_add_right</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L247-L248","name":"PNat.lt_add_left","line":247,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.lt_add_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.lt_add_left\"><span class=\"name\">PNat</span>.<span class=\"name\">lt_add_left</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L243-L244","name":"PNat.le_one_iff","line":243,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.le_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.le_one_iff\"><span class=\"name\">PNat</span>.<span class=\"name\">le_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L238-L239","name":"PNat.coe_coeMonoidHom","line":238,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.coe_coeMonoidHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.coe_coeMonoidHom\"><span class=\"name\">PNat</span>.<span class=\"name\">coe_coeMonoidHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/Data/PNat/Basic.html#PNat.coeMonoidHom\">PNat.coeMonoidHom</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">Coe.coe</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L231-L234","name":"PNat.coeMonoidHom","line":231,"kind":"def","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.coeMonoidHom","doc":"`PNat.coe` promoted to a `MonoidHom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.coeMonoidHom\"><span class=\"name\">PNat</span>.<span class=\"name\">coeMonoidHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L226-L227","name":"PNat.mul_coe","line":226,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mul_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mul_coe\"><span class=\"name\">PNat</span>.<span class=\"name\">mul_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L219-L220","name":"PNat.bit1_le_bit1","line":219,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.bit1_le_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.bit1_le_bit1\"><span class=\"name\">PNat</span>.<span class=\"name\">bit1_le_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L214-L215","name":"PNat.bit1_le_bit0","line":214,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.bit1_le_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.bit1_le_bit0\"><span class=\"name\">PNat</span>.<span class=\"name\">bit1_le_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L209-L210","name":"PNat.bit0_le_bit1","line":209,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.bit0_le_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.bit0_le_bit1\"><span class=\"name\">PNat</span>.<span class=\"name\">bit0_le_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L204-L205","name":"PNat.bit0_le_bit0","line":204,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.bit0_le_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.bit0_le_bit0\"><span class=\"name\">PNat</span>.<span class=\"name\">bit0_le_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L192-L193","name":"PNat.mk_bit1","line":192,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mk_bit1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mk_bit1\"><span class=\"name\">PNat</span>.<span class=\"name\">mk_bit1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">h</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit1\">bit1</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">n</span>, <span class=\"fn\">property</span> := <span class=\"fn\">k</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L187-L188","name":"PNat.mk_bit0","line":187,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.mk_bit0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.mk_bit0\"><span class=\"name\">PNat</span>.<span class=\"name\">mk_bit0</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">n</span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">n</span></span>, <span class=\"fn\">property</span> := <span class=\"fn\">h</span> }</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Init/ZeroOne.html#bit0\">bit0</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">n</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L176-L177","name":"PNat.bot_eq_one","line":176,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.bot_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.bot_eq_one\"><span class=\"name\">PNat</span>.<span class=\"name\">bot_eq_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#Bot.bot\">⊥</a> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L171-L173","name":"PNat.instOrderBotPNatToLEToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","line":171,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.instOrderBotPNatToLEToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.instOrderBotPNatToLEToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid\"><span class=\"name\">PNat</span>.<span class=\"name\">instOrderBotPNatToLEToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/BoundedOrder.html#OrderBot\">OrderBot</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L168-L168","name":"PNat.add_one_le_iff","line":168,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.add_one_le_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.add_one_le_iff\"><span class=\"name\">PNat</span>.<span class=\"name\">add_one_le_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L165-L165","name":"PNat.lt_add_one_iff","line":165,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.lt_add_one_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.lt_add_one_iff\"><span class=\"name\">PNat</span>.<span class=\"name\">lt_add_one_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L161-L162","name":"OrderIso.pnatIsoNat_symm_apply","line":161,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat_symm_apply\"><span class=\"name\">OrderIso</span>.<span class=\"name\">pnatIsoNat_symm_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso.symm\">OrderIso.symm</a> <a href=\"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat\">OrderIso.pnatIsoNat</a></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L154-L156","name":"OrderIso.pnatIsoNat","line":154,"kind":"def","docLink":"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat","doc":"The order isomorphism between ℕ and ℕ+ given by `succ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat\"><span class=\"name\">OrderIso</span>.<span class=\"name\">pnatIsoNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L153-L153","name":"OrderIso.pnatIsoNat_apply","line":153,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat_apply\"><span class=\"name\">OrderIso</span>.<span class=\"name\">pnatIsoNat_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/Data/PNat/Basic.html#OrderIso.pnatIsoNat\">OrderIso.pnatIsoNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L143-L147","name":"Equiv.pnatEquivNat","line":143,"kind":"def","docLink":"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat","doc":"An equivalence between `ℕ+` and `ℕ` given by `PNat.natPred` and `Nat.succPNat`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat\"><span class=\"name\">Equiv</span>.<span class=\"name\">pnatEquivNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L142-L142","name":"Equiv.pnatEquivNat_symm_apply","line":142,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat_symm_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">pnatEquivNat_symm_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat\">Equiv.pnatEquivNat</a>.symm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L142-L142","name":"Equiv.pnatEquivNat_apply","line":142,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">pnatEquivNat_apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/Data/PNat/Basic.html#Equiv.pnatEquivNat\">Equiv.pnatEquivNat</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L138-L139","name":"PNat.contravariantClass_add_lt","line":138,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.contravariantClass_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.contravariantClass_add_lt\"><span class=\"name\">PNat</span>.<span class=\"name\">contravariantClass_add_lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L135-L136","name":"PNat.contravariantClass_add_le","line":135,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.contravariantClass_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.contravariantClass_add_le\"><span class=\"name\">PNat</span>.<span class=\"name\">contravariantClass_add_le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#ContravariantClass\">ContravariantClass</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L132-L133","name":"PNat.covariantClass_add_lt","line":132,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.covariantClass_add_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.covariantClass_add_lt\"><span class=\"name\">PNat</span>.<span class=\"name\">covariantClass_add_lt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L129-L130","name":"PNat.covariantClass_add_le","line":129,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.covariantClass_add_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.covariantClass_add_le\"><span class=\"name\">PNat</span>.<span class=\"name\">covariantClass_add_le</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/CovariantAndContravariant.html#CovariantClass\">CovariantClass</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <span class=\"fn\">(<span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">x_1</span></span></span>)</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L124-L126","name":"PNat.coeAddHom","line":124,"kind":"def","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.coeAddHom","doc":"`coe` promoted to an `AddHom`, that is, a morphism which preserves addition. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.coeAddHom\"><span class=\"name\">PNat</span>.<span class=\"name\">coeAddHom</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#AddHom\">AddHom</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L119-L120","name":"PNat.add_coe","line":119,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.add_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.add_coe\"><span class=\"name\">PNat</span>.<span class=\"name\">add_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span></span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L114-L115","name":"PNat.coe_inj","line":114,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.coe_inj","doc":"We now define a long list of structures on `ℕ+` induced by\nsimilar structures on `ℕ`. Most of these behave in a completely\nobvious way, but there are a few things to be said about\nsubtraction, division and powers.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.coe_inj\"><span class=\"name\">PNat</span>.<span class=\"name\">coe_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L98-L99","name":"Nat.succPNat_inj","line":98,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_inj\"><span class=\"name\">Nat</span>.<span class=\"name\">succPNat_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">m</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L93-L94","name":"Nat.succPNat_injective","line":93,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_injective\"><span class=\"name\">Nat</span>.<span class=\"name\">succPNat_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L89-L90","name":"Nat.succPNat_le_succPNat","line":89,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_le_succPNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_le_succPNat\"><span class=\"name\">Nat</span>.<span class=\"name\">succPNat_le_succPNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L84-L85","name":"Nat.succPNat_lt_succPNat","line":84,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_lt_succPNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_lt_succPNat\"><span class=\"name\">Nat</span>.<span class=\"name\">succPNat_lt_succPNat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L79-L80","name":"Nat.succPNat_mono","line":79,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_mono\"><span class=\"name\">Nat</span>.<span class=\"name\">succPNat_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L75-L75","name":"Nat.succPNat_strictMono","line":75,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#Nat.succPNat_strictMono\"><span class=\"name\">Nat</span>.<span class=\"name\">succPNat_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/Data/PNat/Defs.html#Nat.succPNat\">Nat.succPNat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L66-L67","name":"PNat.natPred_inj","line":66,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_inj\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L61-L62","name":"PNat.natPred_le_natPred","line":61,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_le_natPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_le_natPred\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_le_natPred</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L56-L57","name":"PNat.natPred_lt_natPred","line":56,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_lt_natPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_lt_natPred\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_lt_natPred</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L51-L52","name":"PNat.natPred_injective","line":51,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_injective\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_injective</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Init/Function.html#Function.Injective\">Function.Injective</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L47-L48","name":"PNat.natPred_monotone","line":47,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_monotone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_monotone\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_monotone</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L43-L43","name":"PNat.natPred_strictMono","line":43,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_strictMono\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L38-L39","name":"PNat.natPred_add_one","line":38,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.natPred_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.natPred_add_one\"><span class=\"name\">PNat</span>.<span class=\"name\">natPred_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L33-L34","name":"PNat.one_add_natPred","line":33,"kind":"theorem","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.one_add_natPred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.one_add_natPred\"><span class=\"name\">PNat</span>.<span class=\"name\">one_add_natPred</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Mathlib/Data/PNat/Defs.html#PNat.natPred\">PNat.natPred</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L30-L30","name":"PNat.instIsWellOrderPNatLtToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","line":30,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.instIsWellOrderPNatLtToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.instIsWellOrderPNatLtToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid\"><span class=\"name\">PNat</span>.<span class=\"name\">instIsWellOrderPNatLtToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#IsWellOrder\">IsWellOrder</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> x_1 : <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x_1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/1d3b4790261b440e9fdcb04f52c39143d0992f45/Mathlib/Data/PNat/Basic.lean#L29-L29","name":"PNat.instWellFoundedLTPNatToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","line":29,"kind":"instance","docLink":"./Mathlib/Data/PNat/Basic.html#PNat.instWellFoundedLTPNatToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/PNat/Basic.html#PNat.instWellFoundedLTPNatToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid\"><span class=\"name\">PNat</span>.<span class=\"name\">instWellFoundedLTPNatToLTToPreorderToPartialOrderToOrderedCommMonoidToLinearOrderedCommMonoidInstPNatLinearOrderedCancelCommMonoid</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#WellFoundedLT\">WellFoundedLT</a> <a href=\"./Mathlib/Data/PNat/Defs.html#PNat\">ℕ+</a></span></div></div>"}]}